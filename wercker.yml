# This references a standard debian container from the
# Docker Hub https://registry.hub.docker.com/_/debian/
# Read more about containers on our dev center
# http://devcenter.wercker.com/docs/containers/index.html
box: krawdyah/ci-phoenix
# You can also use services such as databases. Read more on our dev center:
# http://devcenter.wercker.com/docs/services/index.html
# services:
    # - postgres
    # http://devcenter.wercker.com/docs/services/postgresql.html

    # - mongo
    # http://devcenter.wercker.com/docs/services/mongodb.html

# This is the build pipeline. Pipelines are the core of wercker
# Read more about pipelines on our dev center
# http://devcenter.wercker.com/docs/pipelines/index.html

services:
  # http://devcenter.wercker.com/docs/services/postgresql.html
  # pg_ctl -D /var/lib/postgresql/data -l logfile start
  - id: postgres
    env:
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      # POSTGRES_USER: postgres

build:
  # The steps that will be executed on build
  # Steps make up the actions in your pipeline
  # Read more about steps on our dev center:
  # http://devcenter.wercker.com/docs/steps/index.html

  steps:
    - script:
        name: Essential
        code: |
          apt-get update && apt-get upgrade -y && apt-get install -y build-essential

    - script:
        name: Enviroment
        code: |
          export MIX_ENV=test

    - script:
        name: Dependencies
        code: |
          cd $WERCKER_SOURCE_DIR
          yes | mix do deps.get, deps.compile

    - script:
        name: Compile
        code: |
          yes | mix compile

    - script:
        name: Test Database
        code: |
          mix do ecto.create, ecto.migrate

    - script:
        name: Run Tests
        code: |
          mix test
